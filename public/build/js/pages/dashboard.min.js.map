{"version":3,"names":[],"mappings":"","sources":["js/pages/dashboard.js"],"sourcesContent":["// Obtén el input 'portion' y todos los elementos con la clase 'food-detail_value'\r\nconst portionInput = document.getElementById('portion');\r\nconst foodDetailValues = document.querySelectorAll('.food-detail_value');\r\n\r\n// Obtén el tamaño inicial de la porción desde el atributo data-portion-initial-size\r\nconst initialPortionSize = parseFloat(portionInput.getAttribute('data-portion-initial-size'));\r\n\r\n// Agrega un listener al input para detectar cambios\r\nportionInput.addEventListener('input', () => {\r\n    // Obtén el nuevo valor de la porción ingresado por el usuario\r\n    const newPortionSize = parseFloat(portionInput.value);\r\n\r\n    // Asegúrate de que el valor ingresado sea válido antes de actualizar\r\n    if (isNaN(newPortionSize) || newPortionSize <= 0) {\r\n        return;\r\n    }\r\n\r\n    // Itera sobre todos los elementos con la clase 'food-detail_value'\r\n    foodDetailValues.forEach(element => {\r\n        // Obtén el valor inicial del atributo data-initial-value\r\n        const initialValue = parseFloat(element.getAttribute('data-initial-value'));\r\n\r\n        // Si el elemento tiene un valor inicial válido, aplica la regla de tres\r\n        if (!isNaN(initialValue)) {\r\n            const updatedValue = (initialValue * newPortionSize) / initialPortionSize;\r\n            // Actualiza el contenido del elemento con el nuevo valor\r\n            element.textContent = updatedValue.toFixed(1); // Redondear a 2 decimales\r\n        }\r\n    });\r\n});\r\n"],"file":"dashboard.min.js"}